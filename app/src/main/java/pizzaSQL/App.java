/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package pizzaSQL;

import javax.swing.*;
import java.sql.*;
import java.util.Scanner;

public class App {
	/*
			FOR LOGIN:
	 */
	private static final String dbName = "pizza";
	private static final String user = "root";
	private static final String passwd = "dio";
	private static final String URL = "jdbc:mysql://127.0.0.1/"+dbName;


	public static final String listAllCustomersSQL = "SELECT * FROM customers";
	public static final String ADD_CUSTOMER = "insert into customers(id,name,postal_code,email,phone,passwd) values (?,?,?,?,?,?);";
	public static final String deleteCustomerSQL = "DELETE FROM customers WHERE id =";
	public Connection conn;

	protected static String customerId = "";
	protected static String customerEmail = "";
	protected static String customerPhone = "";
	protected static String customerPostcode = "";

	public void mainLoop() throws Exception {
		conn = makeConnection(user,URL,passwd);

		loop: while (true) {
			System.out.println(" ");
			System.out.println("""
					1 - Make an order
					2 - List all available Pizzas
					3 - List all available Drinks
					4 - List all available Desserts
					5 - List of current orders
					6 - Manage Customers
					0 - Exit\s""");
			Scanner s = new Scanner(System.in);
			String str = s.nextLine();
			switch (str) {
				case "1":
					makeOrder();
					break;
				case "2":
					listPizza();
					break;
				case "3":
					listDrinks();
					break;
				case "4":
					listDesserts();
					break;
				case "5":
					listOfOrder();
					break;
				case "6":
					manageCustomer();
					break;
				case "0":
					break loop;
			}
		}
	}
	/*
		FOR PIZZA
	 */
	private void listPizza() throws SQLException {
		System.out.println("\ninside pizza list methd");
		java.sql.Statement statement = conn.createStatement();
		String QRY = "SELECT id, name FROM items WHERE items_type_id = '1'";
		ResultSet resultPizza = statement.executeQuery(QRY);
		while (resultPizza.next()) {

			String nameOfPizza = resultPizza.getString("name");
			String idOfPizza = resultPizza.getString("id");
			String veggie = isVeggie(idOfPizza) ? " -- Vegetarian" : "";
			int price = getPriceOfPizza(idOfPizza);
			System.out.println("[ Pizza: "+nameOfPizza+" -- Price: "+price+veggie+"--ID: "+idOfPizza+" ]");
			System.out.println("<INGREDIENTS:"+getIngredientOfPizza(idOfPizza));
		}

	}
	private boolean isVeggie(String id) throws SQLException {
		java.sql.Statement statement = conn.createStatement();
		String QRY = "SELECT veggie from items_ingredients JOIN ingredients i " +
						"on i.id = items_ingredients.ingredients_id  WHERE items_id = '"+id+"'";
		ResultSet rs = statement.executeQuery(QRY);
		while (rs.next()) { if (rs.getInt("veggie") == 0) return false; }
		return true;
	}
	private int getPriceOfPizza(String id) throws SQLException {
		java.sql.Statement statement = conn.createStatement();
		String QRY = "SELECT price from items_ingredients JOIN ingredients i " +
					"on i.id = items_ingredients.ingredients_id  WHERE items_id = '"+id+"'";
		ResultSet rs = statement.executeQuery(QRY);
		int price = 0;
		while (rs.next()) { price += rs.getInt("price"); }
		return price;
	}
	private String getIngredientOfPizza(String id) throws SQLException {
		StringBuilder out = new StringBuilder();
		Statement stmt = conn.createStatement();
		String QRY = "SELECT name FROM items_ingredients JOIN ingredients i " +
						"on i.id = items_ingredients.ingredients_id WHERE items_id ='"+id+"'";
		ResultSet rs = stmt.executeQuery(QRY);
		while (rs.next()) {
			out.append("\t").append(rs.getString("name"));
		}
		return out.toString();
	}
	/*
		FOR DRINKS
	 */
	private void listDrinks() throws SQLException {
		System.out.println("\n");
		java.sql.Statement statement = conn.createStatement();
		String QRY = "SELECT id name, price FROM items WHERE items_type_id = '2'";
		ResultSet rs = statement.executeQuery(QRY);
		while (rs.next()) {
			String drinkName = rs.getString("name");
			int price = rs.getInt("price");
			int id = rs.getInt("id");
			System.out.println("[ Drink: "+drinkName+" -- Price: "+price+"-- ID: "+id+ " ]");
		}
	}
	/*
		FOR DESSERTS
	 */
	private void listDesserts() throws SQLException {
		System.out.println("\n");
		java.sql.Statement statement = conn.createStatement();
		String QRY = "SELECT id name, price FROM items WHERE items_type_id = '3'";
		ResultSet rs = statement.executeQuery(QRY);
		while (rs.next()) {
			String dessertName = rs.getString("name");
			int price = rs.getInt("price");
			int id = rs.getInt("id");
			System.out.println("[ Desserts: "+dessertName+" -- Price: "+price+"-- ID: "+id+ " ]");
		}
	}

	public Connection makeConnection(String user, String URL, String passwd) throws ClassNotFoundException {
		Connection conn = null;
		try {
			Class.forName("com.mysql.cj.jdbc.Driver");
			conn = DriverManager.getConnection(URL, user, passwd);
		} catch (SQLException ex) {
			// handle any errors
			System.out.println("SQLException: " + ex.getMessage());
			System.out.println("SQLState: " + ex.getSQLState());
			System.out.println("VendorError: " + ex.getErrorCode());
		}
		return conn;
	}

	private void manageCustomer() throws Exception {
		loop:while (true) {
			System.out.println("\ninside manageCustomer method");
			System.out.println("1 - Create a new customer");
			System.out.println("2 - Delete Customer ");
			System.out.println("3 - List All customers ");
			System.out.println("0 - Exit ");
			Scanner s = new Scanner(System.in);
			String str = s.nextLine();
			switch (str) {
				case "1":
					newCustomer();
					break;
				case "2":
					deleteCustomer();
					break;
				case "3":
					listAllCustomer();
					break;
				case "0":
					break loop;
			}
		}
	}

	private void listAllCustomer() throws SQLException {
		System.out.println("inside listAllCustomer methd");

		Statement stmt = conn.createStatement();
		ResultSet rs = stmt.executeQuery(listAllCustomersSQL);
		while (rs.next()) {

			String id = rs.getString("id");
			String name = rs.getString("name");
			String email = rs.getString("email");
			String phone = rs.getString("phone");

			System.out.println("[Customer id: "+id+" Name: "+name+" email: "+email+"Phone num: "+phone);
		}

	}

	private void deleteCustomer() throws SQLException {
		listAllCustomer();
		System.out.println("Type the id of a customer to delete: ");
		Scanner s = new Scanner(System.in);
		String id = s.nextLine();

		Statement stmt = conn.createStatement();
		stmt.executeQuery((deleteCustomerSQL+id));

	}

	private void newCustomer() throws SQLException {
		System.out.println("inside new Customer methode");
		System.out.println("insert name ");
		Scanner s = new Scanner(System.in);
		String name = s.nextLine();
		System.out.println("insert phone ");
		String phone = s.nextLine();
		System.out.println("insert address ");
		String address = s.nextLine();
		System.out.println("insert postal code ");
		String postalCode = s.nextLine();
		PreparedStatement prepareStatement = conn.prepareStatement(ADD_CUSTOMER);

		prepareStatement.setString(1, name);
		prepareStatement.setString(2, phone);
		prepareStatement.setString(3, address);
		prepareStatement.setString(4, postalCode);
		prepareStatement.executeUpdate();

	}

	private void listOfOrder() {
		System.out.println("inside listOfOrder methd");

	}

	private void makeOrder() throws SQLException{

		if (!login()){
			System.out.println("Login failed :(");
			return;
		}
		System.out.println("inside makeOrder methd");
		listPizza(); listDrinks(); listDesserts();
		System.out.println("Type the id of the products you wish to purchase. When you are done, type 'd' ");
		boolean loop = true;
		while (true){
			Scanner scan = new Scanner(System.in);
			String s = scan.nextLine();
			if (s.equals("d")){
				break;
			}
			else {
				//add item to orders_items
			}
		}
	}

	public boolean login() throws SQLException{
		System.out.println("Login needed!\nEmail:");
		Scanner s = new Scanner(System.in);
		String email = s.nextLine();
		System.out.println("Password:");
		String pass = s.nextLine();
		Statement stmt = conn.createStatement();
		String QRY = "SELECT * FROM customers WHERE email='"+email+"' AND passwd='"+pass+"'";
		ResultSet rs = stmt.executeQuery(QRY);
		boolean success = false;
		while (rs.next()){
			customerId += rs.getInt("id");
			customerPhone = rs.getString("phone");
			customerPostcode = rs.getString("postal_code");
			customerEmail = rs.getString("email");
			success = true;
		}
		return success;
	}

	public static void main(String[] args) throws Exception {
		new App().mainLoop();
	}
}
